{
    "temas": [
        {
            "nombre": "JavaScript",
            "preguntas": [
                "Hola",
                "Que es JavaScript",
                "Para que sirve JavaScript",
                "Cual es la diferencia entre Java y JavaScript",
                "Que es una variable en JavaScript",
                "Que tipos de datos existen en JavaScript",
                "Que es una funcion en JavaScript",
                "Como se declara una funcion en JavaScript",
                "Que es una arrow function",
                "Que es el DOM en JavaScript",
                "Como se accede a un elemento del DOM en JavaScript",
                "Que es un callback en JavaScript",
                "Que es una promesa en JavaScript",
                "Que es async y await en JavaScript",
                "Cual es la diferencia entre == y === en JavaScript",
                "Que es el scope en JavaScript",
                "Que es el hoisting en JavaScript",
                "Que es un closure en JavaScript",
                "Que es el event loop en JavaScript",
                "Como funciona setTimeout en JavaScript",
                "Como se manipula el HTML con JavaScript",
                "Como se declara un array en JavaScript",
                "Que es un objeto en JavaScript",
                "Que es JSON en JavaScript",
                "Como se convierte un JSON a un objeto en JavaScript",
                "Que es localStorage y sessionStorage en JavaScript",
                "Que diferencia hay entre let, var y const",
                "Que es destructuring en JavaScript",
                "Que es spread operator en JavaScript",
                "Como funciona map en JavaScript",
                "Como funciona filter en JavaScript",
                "Como funciona reduce en JavaScript",
                "Que es una clase en JavaScript",
                "Que es la herencia en JavaScript",
                "Que es un mÃ³dulo en JavaScript",
                "Como se importa y exporta un modulo en JavaScript",
                "Como hacer una peticion fetch en JavaScript",
                "Que es CORS en JavaScript",
                "Que es una API en JavaScript",
                "Que es WebSocket en JavaScript",
                "Que es una expresion regular en JavaScript",
                "Como manejar errores en JavaScript",
                "Que es try catch en JavaScript"
            ],
            "respuestas": [
                "Hola, estoy aqui para ayudarte con tus preguntas de JavaScript :)",
                "JavaScript es un lenguaje de programacion utilizado principalmente para el desarrollo web, permitiendo crear paginas interactivas y dinamicas.",
                "JavaScript se usa para manipular el DOM, manejar eventos, hacer solicitudes a servidores, programar logica en aplicaciones web y mas.",
                "Java es un lenguaje de programacion orientado a objetos y compilado, mientras que JavaScript es un lenguaje interpretado y orientado a eventos utilizado en la web.",
                "Una variable en JavaScript es un contenedor que almacena un valor y se declara con var, let o const.",
                "Los principales tipos de datos en JavaScript son: number, string, boolean, object, array, function, null y undefined.",
                "Una funcion en JavaScript es un bloque de codigo reutilizable que realiza una tarea especifica y puede recibir parametros y retornar valores.",
                "En JavaScript, una funcion se declara con la palabra clave function, seguida de un nombre, parentesis y llaves. Ejemplo: function suma(a, b) { return a + b; }",
                "Una arrow function es una forma mas corta de escribir funciones en JavaScript usando =>. Ejemplo: const suma = (a, b) => a + b;",
                "El DOM (Document Object Model) es una representacion en arbol de una pagina web que permite manipular sus elementos con JavaScript.",
                "Se puede acceder a un elemento del DOM con document.getElementById('id'), document.querySelector('.clase') o document.getElementsByTagName('tag').",
                "Un callback es una funcion que se pasa como argumento a otra funcion y se ejecuta despues de que esta finaliza.",
                "Una promesa en JavaScript es un objeto que representa una operacion asincronica y puede estar en tres estados: pendiente, resuelta o rechazada.",
                "async y await son palabras clave que permiten manejar promesas de manera mas sencilla y evitar el uso excesivo de .then() y .catch().",
                "== compara valores permitiendo conversion de tipo, mientras que === compara tanto el valor como el tipo de dato sin conversion.",
                "El scope en JavaScript se refiere al alcance de una variable, que puede ser global, de funcion o de bloque.",
                "El hoisting es un comportamiento en JavaScript donde las declaraciones de variables y funciones se mueven al inicio del codigo antes de ejecutarse.",
                "Un closure es una funcion que recuerda el scope en el que fue creada, permitiendo acceder a variables externas incluso despues de que la funcion externa haya terminado.",
                "El event loop es un mecanismo de JavaScript que maneja la ejecucion de tareas asincronicas y eventos, asegurando que el codigo se ejecute sin bloquear la interfaz.",
                "setTimeout ejecuta una funcion despues de un tiempo especifico en milisegundos. Ejemplo: setTimeout(() => console.log('Hola'), 2000);",
                "Se puede manipular el HTML con JavaScript usando el DOM, modificando propiedades como innerHTML, textContent y atributos con setAttribute().",
                "Un array en JavaScript se declara con corchetes []. Ejemplo: let numeros = [1, 2, 3, 4];",
                "Un objeto en JavaScript es una coleccion de pares clave-valor. Ejemplo: let persona = { nombre: 'Juan', edad: 30 };",
                "JSON (JavaScript Object Notation) es un formato de intercambio de datos basado en texto ligero y facil de leer.",
                "Se puede convertir un JSON a un objeto en JavaScript con JSON.parse(). Ejemplo: let obj = JSON.parse('{\"nombre\": \"Juan\"}');",
                "localStorage y sessionStorage permiten almacenar datos en el navegador. localStorage persiste despues de cerrar el navegador, mientras que sessionStorage se borra al cerrar la sesion.",
                "let y const tienen alcance de bloque, mientras que var tiene alcance de funcion. Ademas, const no permite reasignacion.",
                "Destructuring es una forma de extraer valores de objetos o arrays de manera sencilla. Ejemplo: let {nombre} = persona;",
                "El spread operator (...) permite expandir elementos de un array u objeto. Ejemplo: let copia = [...arrayOriginal];",
                "map recorre un array y devuelve un nuevo array con los elementos transformados. Ejemplo: array.map(x => x * 2);",
                "filter devuelve un nuevo array con los elementos que cumplen una condicion. Ejemplo: array.filter(x => x > 5);",
                "reduce reduce un array a un solo valor aplicando una funcion acumuladora. Ejemplo: array.reduce((a, b) => a + b, 0);",
                "Una clase en JavaScript es una plantilla para crear objetos con propiedades y metodos.",
                "La herencia en JavaScript permite que una clase derive de otra y herede sus propiedades y metodos.",
                "Un modulo en JavaScript es un archivo que contiene codigo reutilizable que puede importarse en otros archivos.",
                "Para importar un modulo en JavaScript se usa import y para exportar se usa export. Ejemplo: export function saludar() {}; import { saludar } from './modulo.js';",
                "Se hace una peticion fetch en JavaScript con fetch('url').then(res => res.json()).then(data => console.log(data));",
                "CORS (Cross-Origin Resource Sharing) es un mecanismo de seguridad que restringe solicitudes HTTP entre diferentes origenes.",
                "Una API en JavaScript es una interfaz que permite interactuar con servicios externos mediante HTTP.",
                "WebSocket en JavaScript permite la comunicacion en tiempo real entre un cliente y un servidor.",
                "Una expresion regular en JavaScript es un patron utilizado para buscar o manipular texto.",
                "Para manejar errores en JavaScript se usa try catch. Ejemplo: try { let x = y; } catch(error) { console.log(error.message); }"
            ]
        }
    ]
}
